---- gpri_ui Matches (105 in 2 files) ----
Mainwindow.cpp:    gpri_ui(new Ui::MainWindow)
Mainwindow.cpp:    gpri_ui->setupUi(this);
Mainwindow.cpp:	connect(gpri_ui->action_chinese_s, SIGNAL(triggered()), this, SLOT(slot_language_sw_to_chs()));
Mainwindow.cpp:	connect(gpri_ui->action_chinese_t, SIGNAL(triggered()), this, SLOT(slot_language_sw_to_cht()));
Mainwindow.cpp:	connect(gpri_ui->action_english, SIGNAL(triggered()), this, SLOT(slot_language_sw_to_english()));
Mainwindow.cpp:	gpri_ui->action_english->setCheckable(true);
Mainwindow.cpp:	gpri_ui->action_chinese_s->setCheckable(true);
Mainwindow.cpp:	gpri_ui->action_chinese_t->setCheckable(true);
Mainwindow.cpp:	gpri_ui->label_led->setPixmap(QPixmap(":/led_off")); /*初始是關閉串口狀態*/
Mainwindow.cpp:	gpri_ui->push_button_open_close->setText(tr("關閉"));
Mainwindow.cpp:	connect(gpri_ui->push_button_open_close, SIGNAL(clicked()), this, SLOT(slot_push_button_open_close()));
Mainwindow.cpp:     connect(gpri_ui->pushButton_tx_enable, SIGNAL(released()), this, SLOT(slot_button_tx_start()));
Mainwindow.cpp:	delete gpri_ui;
Mainwindow.cpp:            gpri_ui->retranslateUi(this);
Mainwindow.cpp:   //gpri_ui->label->addItem(tr("item1"));
Mainwindow.cpp:   //gpri_ui->listWidget->addItem(tr("item2"));
Mainwindow.cpp:   //gpri_ui->listWidget->addItem(tr("item3"));
Mainwindow.cpp:        gpri_ui->pushButton_open_close->setText(tr("闂滈枆"));
Mainwindow.cpp:        gpri_ui->pushButton_open_close->setText(tr("闂滈枆"));
Mainwindow.cpp:    gpri_ui->pushButton_open_close->setText(tr("闂滈枆"));
Mainwindow.cpp:    gpri_ui->combobox_port->clear();
Mainwindow.cpp:        gpri_ui->combobox_port->addItem(list.first(), list);
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("1200"), QSerialPort::Baud1200);
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("2400"), QSerialPort::Baud2400);
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("4800"), QSerialPort::Baud4800);
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("9600"), QSerialPort::Baud9600);
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("19200"), QSerialPort::Baud19200);
Mainwindow.cpp:    //gpri_ui->combobox_baudrate->addItem(QStringLiteral("Custom"));
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("38400"), QSerialPort::Baud38400);
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("57600"), QSerialPort::Baud57600);
Mainwindow.cpp:    gpri_ui->combobox_baudrate->addItem(QStringLiteral("115200"), QSerialPort::Baud115200);
Mainwindow.cpp:    //gpri_ui->baudRateBox->addItem(QStringLiteral("230400"), QSerialPort::Baud230400);
Mainwindow.cpp:    //gpri_ui->baudRateBox->addItem(QStringLiteral("460800"), QSerialPort::Baud460800);
Mainwindow.cpp:    gpri_ui->combobox_data_len->addItem(QStringLiteral("5"), QSerialPort::Data5);
Mainwindow.cpp:    gpri_ui->combobox_data_len->addItem(QStringLiteral("6"), QSerialPort::Data6);
Mainwindow.cpp:    gpri_ui->combobox_data_len->addItem(QStringLiteral("7"), QSerialPort::Data7);
Mainwindow.cpp:    gpri_ui->combobox_data_len->addItem(QStringLiteral("8"), QSerialPort::Data8);
Mainwindow.cpp:    //gpri_ui->combobox_data_len->addItem(QStringLiteral("9"), QSerialPort::Data9);
Mainwindow.cpp:    gpri_ui->combobox_parity->addItem(QStringLiteral("None"), QSerialPort::NoParity);
Mainwindow.cpp:    gpri_ui->combobox_parity->addItem(QStringLiteral("Even"), QSerialPort::EvenParity);
Mainwindow.cpp:    gpri_ui->combobox_parity->addItem(QStringLiteral("Odd"), QSerialPort::OddParity);
Mainwindow.cpp:    gpri_ui->combobox_parity->addItem(QStringLiteral("Mark"), QSerialPort::MarkParity);
Mainwindow.cpp:    gpri_ui->combobox_parity->addItem(QStringLiteral("Space"), QSerialPort::SpaceParity);
Mainwindow.cpp:    gpri_ui->combobox_stop_len->addItem(QStringLiteral("1"), QSerialPort::OneStop);
Mainwindow.cpp:    gpri_ui->combobox_stop_len->addItem(QStringLiteral("1.5"), QSerialPort::OneAndHalfStop);
Mainwindow.cpp:    gpri_ui->combobox_stop_len->addItem(QStringLiteral("2"), QSerialPort::TwoStop);
Mainwindow.cpp:    gpri_ui->combobox_flow_ctrl->addItem(QStringLiteral("None"), QSerialPort::NoFlowControl);
Mainwindow.cpp:    gpri_ui->combobox_flow_ctrl->addItem(QStringLiteral("Hardware"), QSerialPort::HardwareControl);
Mainwindow.cpp:    gpri_ui->combobox_flow_ctrl->addItem(QStringLiteral("Software"), QSerialPort::SoftwareControl);
Mainwindow.cpp:    comboBox_sel_disp(gpri_ui->combobox_baudrate,  gpri_setting->serial_dev.baud_rate_string);
Mainwindow.cpp:    comboBox_sel_disp(gpri_ui->combobox_data_len,  gpri_setting->serial_dev.data_bits_string );
Mainwindow.cpp:    comboBox_sel_disp(gpri_ui->combobox_stop_len,  gpri_setting->serial_dev.stop_bits_string );
Mainwindow.cpp:    comboBox_sel_disp(gpri_ui->combobox_parity,    gpri_setting->serial_dev.parity_string );
Mainwindow.cpp:    comboBox_sel_disp(gpri_ui->combobox_flow_ctrl, gpri_setting->serial_dev.flow_control_string);
Mainwindow.cpp:    gpri_ui->checkBox_tx_dtr->setChecked(currentSettings.isDtr);
Mainwindow.cpp:    gpri_ui->checkBox_tx_rts->setChecked(currentSettings.isRts);
Mainwindow.cpp:    gpri_ui->checkBox_tx_hex_disp->setChecked(currentSettings.isHexDisplayTx);
Mainwindow.cpp:    gpri_ui->checkBox_tx_hex->setChecked(currentSettings.isHexSend);
Mainwindow.cpp:    gpri_ui->checkBox_tx_new_line->setChecked(currentSettings.sendNewLineEnabled);
Mainwindow.cpp:    gpri_ui->checkBox_tx_cycle->setChecked(currentSettings.isTimerSend);
Mainwindow.cpp:    gpri_ui->lineEdit_tx_cycle_timer->setText(QString::number(currentSettings.timerLength));
Mainwindow.cpp:    gpri_ui->lineEdit_tx->setText(currentSettings.sendCache);
Mainwindow.cpp:    gpri_ui->checkBox_rx_hex_disp->setChecked(currentSettings.isHexDisplayRx);
Mainwindow.cpp:    gpri_ui->checkBox_rx_newline_disp->setChecked(currentSettings.isRxNewLine);
Mainwindow.cpp:    gpri_ui->checkBox_rx_resource->setChecked(currentSettings.isRxResourcr);
Mainwindow.cpp:	gpri_setting->serial_dev.name = gpri_ui->combobox_port->currentText();
Mainwindow.cpp:	if(gpri_ui->combobox_baudrate->currentIndex() == 4)
Mainwindow.cpp:		gpri_setting->serial_dev.baud_rate  = gpri_ui->combobox_baudrate->currentText().toInt();
Mainwindow.cpp:		gpri_setting->serial_dev.baud_rate = static_cast<QSerialPort::BaudRate>(gpri_ui->combobox_baudrate->itemData(gpri_ui->combobox_baudrate->currentIndex()).toInt());
Mainwindow.cpp:	gpri_setting->serial_dev.baud_rate = static_cast<QSerialPort::BaudRate>(gpri_ui->combobox_baudrate->itemData(gpri_ui->combobox_baudrate->currentIndex()).toInt());
Mainwindow.cpp:	gpri_setting->serial_dev.data_bits = static_cast<QSerialPort::DataBits>(gpri_ui->combobox_data_len->itemData(gpri_ui->combobox_data_len->currentIndex()).toInt());
Mainwindow.cpp:	gpri_setting->serial_dev.data_bits_string = gpri_ui->combobox_data_len->currentText();
Mainwindow.cpp:	gpri_setting->serial_dev.stop_bits = static_cast<QSerialPort::StopBits>( gpri_ui->combobox_stop_len->itemData(gpri_ui->combobox_stop_len->currentIndex()).toInt());
Mainwindow.cpp:	gpri_setting->serial_dev.stop_bits_string = gpri_ui->combobox_stop_len->currentText();
Mainwindow.cpp:	gpri_setting->serial_dev.parity = static_cast<QSerialPort::Parity>( gpri_ui->combobox_parity->itemData(gpri_ui->combobox_parity->currentIndex()).toInt());
Mainwindow.cpp:	gpri_setting->serial_dev.parity_string = gpri_ui->combobox_parity->currentText();
Mainwindow.cpp:	gpri_setting->serial_dev.flow_control = static_cast<QSerialPort::FlowControl>( gpri_ui->combobox_flow_ctrl->itemData(gpri_ui->combobox_flow_ctrl->currentIndex()).toInt());
Mainwindow.cpp:	gpri_setting->serial_dev.flow_control_string = gpri_ui->combobox_flow_ctrl->currentText();
Mainwindow.cpp:        gpri_ui->label_led->setPixmap(QPixmap(":/led_off"));
Mainwindow.cpp:        gpri_ui->push_button_open_close->setText(tr("關閉"));
Mainwindow.cpp:            gpri_ui->statusBar->showMessage(tr("Open error"));
Mainwindow.cpp:            gpri_ui->statusBar->showMessage(tr("Configure error"));
Mainwindow.cpp:            gpri_ui->label_led->setPixmap(QPixmap(":/led_on"));
Mainwindow.cpp:            gpri_ui->push_button_open_close->setText(tr("打開"));
Mainwindow.cpp:	QString inputStr = gpri_ui->lineEdit_tx->text();
Mainwindow.cpp:	gpri_ui->textBrowser_tx->setText(l_str_all);
Mainwindow.cpp:            gpri_ui->action_english->setChecked(true);
Mainwindow.cpp:            gpri_ui->action_chinese_s->setChecked(false);
Mainwindow.cpp:            gpri_ui->action_chinese_t->setChecked(false);
Mainwindow.cpp:           gpri_ui->action_english->setChecked(false);
Mainwindow.cpp:           gpri_ui->action_chinese_s->setChecked(true);
Mainwindow.cpp:           gpri_ui->action_chinese_t->setChecked(false);
Mainwindow.cpp:           gpri_ui->action_english->setChecked(false);
Mainwindow.cpp:           gpri_ui->action_chinese_s->setChecked(false);
Mainwindow.cpp:           gpri_ui->action_chinese_t->setChecked(true);
Mainwindow.cpp:            gpri_ui->action_english->setChecked(false);
Mainwindow.cpp:            gpri_ui->action_chinese_s->setChecked(false);
Mainwindow.cpp:            gpri_ui->action_chinese_t->setChecked(true);
Mainwindow.h:        Ui::MainWindow *gpri_ui;        /*主ui*/
